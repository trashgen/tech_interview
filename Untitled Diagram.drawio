<mxfile host="app.diagrams.net" modified="2021-12-15T08:52:10.547Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36" etag="jvR-u2ogGKd0r6qrp9s2" version="15.9.6" type="github">
  <diagram id="IbzGcBM9QDybaDAkwbq8" name="Page-1">
    <mxGraphModel dx="1422" dy="786" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" background="#CCCCCC" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="bjESsrOZtTePqHt1_tni-1" value="&lt;h1&gt;Задание&lt;/h1&gt;&lt;p&gt;Есть сайт компании/блог. 1000000 уникальных пользователей в день. Новые записи/редактирование происходят достаточно редко, примерно раз в месяц. Надо описать стек применимых технологий (языки, кеши, базу, очереди) и как они будут взаимодействовать.&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="20" y="20" width="380" height="120" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-2" value="Actor" style="shape=umlActor;verticalLabelPosition=bottom;verticalAlign=top;html=1;outlineConnect=0;" vertex="1" parent="1">
          <mxGeometry x="45" y="330" width="30" height="60" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-3" value="&lt;h1&gt;Видение проблемы&lt;/h1&gt;&lt;p&gt;Из самой задачи непонятен полный масштаб. Поэтому предложу 2 решения, так как полное уточнение, вообще говоря, требует обстоятельного ТЗ.&lt;/p&gt;&lt;p&gt;1. Если этот сайт/блог предполагает 1М юников как конечную цель с достаточно небольшим приростом/уходом юзеров, сохряняя в целом общее количество, то для его работы достаточно следующего стека: Vanilla PHP8 + Mysql/PostgreSQL. 8я версия вполне себе шустрая и какие-то колебания можно поддерживать обновлением железа.&lt;/p&gt;&lt;p&gt;2. Если эта система создается на вырост, то есть ближайшей ожидаемой целью является точка 10М юников, то расходы на железо будут уже слишком высокими и в данном случае лучше подойдет стек: Golang+PostgreSQL+Docker+Redis. Redis скорее как возможность, так как далеко не факт, что его мощь по созданию агрегатов для того, чтобы избежать SQL JOIN будет востребована.&lt;/p&gt;&lt;p&gt;Фундаментом архитектуры может быть несколько независимых REST-like и/или gRPC микролитов, каждый из которых будет отвечать за свою область данных - то есть разделение системы в распределенную предлагаю базировать на самостоятельных логических блоках данных. Выбор между REST-like и gRPC в данном случае больше обусловлен предполагаемым объемом данных, который будут уходить в рамках одного запроса, так как фактор stateless/-full в данном случае не выглядит как нечто необходимое - вполне достаточно и токена от авторизатора.&lt;/p&gt;&lt;p&gt;Предполагаемый достаточно необходимый функционал:&lt;/p&gt;&lt;p&gt;&amp;nbsp;- Общая информация аккаунта, его контакты. Тут же (если это блог) можно добавить таблицу для связки с друзьями;&lt;/p&gt;&lt;p&gt;&amp;nbsp;- Данные финансового характера: платежи, заказы, донаты;&lt;/p&gt;&lt;p&gt;&amp;nbsp;- Общение аккаунтов: форум, комментарии и прочее.&lt;/p&gt;&lt;p&gt;Таким образом можно выделить 3 микролита, каждый из которых обладает своей внутренней БД. Фронт в данном случае должен таким, чтобы не запрашивать данные из разных доменов в рамках одного запроса - таким образом можно избавиться от дополнительной внешней зависимости в виде MessageBroker.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Так же подобные раздельные запросы позволять избегать SQL JOIN, а значит и Redis до определенного момента времени не нужен - например отдельные запросы на данные по аккаунту и на его друзей. В крайнем случае в PG есть такая вещь как Materialized View, которая вполне может покрыть ожидания.&lt;/p&gt;&lt;p&gt;Учитывая, по задаче, что будет в основном readonly доступ, то PG для этой задачи вполне хватит и без Redis - так как для этого там уже есть доп средства.&lt;/p&gt;&lt;p&gt;При действительно серьезном потоке юзеров всегда есть возможно создавать по несколько инстансов микролитов (Docker+(K8s/Compose)), а балансировку доступа отдать Nginx. так же для балансировки можно создать доп микросервис на Golang, который сможет производить её по более хитрым параметрам - самый просто пример тут это интервалы PK аккаунтов.&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="425" y="20" width="405" height="1130" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-5" value="" style="endArrow=classic;html=1;rounded=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="bjESsrOZtTePqHt1_tni-2" target="bjESsrOZtTePqHt1_tni-38">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="365" y="280" as="sourcePoint" />
            <mxPoint x="465" y="280" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-6" value="Conn" style="edgeLabel;resizable=0;html=1;align=center;verticalAlign=middle;" connectable="0" vertex="1" parent="bjESsrOZtTePqHt1_tni-5">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-12" value="" style="endArrow=classic;html=1;rounded=0;" edge="1" parent="1" target="bjESsrOZtTePqHt1_tni-9">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="150" y="430" as="sourcePoint" />
            <mxPoint x="465" y="460" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-9" value="WebDAV&lt;br&gt;Static Frontend&lt;br&gt;&amp;nbsp;data" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#FFFF66;" vertex="1" parent="1">
          <mxGeometry x="55" y="470" width="80" height="60" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-19" value="PostgreSQL" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;fillColor=#99FFFF;" vertex="1" parent="1">
          <mxGeometry x="80" y="680" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-10" value="Accounts" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#33FF33;" vertex="1" parent="1">
          <mxGeometry x="255" y="400" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-14" value="Orders" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#33FF33;" vertex="1" parent="1">
          <mxGeometry x="55" y="590" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-15" value="Forum/Messages" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#33FF33;" vertex="1" parent="1">
          <mxGeometry x="255" y="590" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-22" value="PostgreSQL" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;fillColor=#99FFFF;" vertex="1" parent="1">
          <mxGeometry x="275" y="680" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-23" value="PostgreSQL" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;fillColor=#99FFFF;" vertex="1" parent="1">
          <mxGeometry x="295" y="500" width="80" height="80" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-24" value="" style="endArrow=classic;html=1;rounded=0;" edge="1" parent="1" target="bjESsrOZtTePqHt1_tni-10">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="200" y="400" as="sourcePoint" />
            <mxPoint x="295" y="480" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-25" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="bjESsrOZtTePqHt1_tni-10" target="bjESsrOZtTePqHt1_tni-23">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="375" y="620" as="sourcePoint" />
            <mxPoint x="425" y="570" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-27" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.75;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="bjESsrOZtTePqHt1_tni-4" target="bjESsrOZtTePqHt1_tni-15">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="375" y="620" as="sourcePoint" />
            <mxPoint x="425" y="570" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-28" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="bjESsrOZtTePqHt1_tni-15" target="bjESsrOZtTePqHt1_tni-22">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="375" y="620" as="sourcePoint" />
            <mxPoint x="425" y="570" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-31" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="bjESsrOZtTePqHt1_tni-14" target="bjESsrOZtTePqHt1_tni-19">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="375" y="620" as="sourcePoint" />
            <mxPoint x="425" y="570" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-32" value="" style="endArrow=classic;html=1;rounded=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.75;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="bjESsrOZtTePqHt1_tni-4" target="bjESsrOZtTePqHt1_tni-14">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="375" y="620" as="sourcePoint" />
            <mxPoint x="425" y="570" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-33" value="Authentification" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#00CC00;" vertex="1" parent="1">
          <mxGeometry x="255" y="330" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-39" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="bjESsrOZtTePqHt1_tni-38" target="bjESsrOZtTePqHt1_tni-33">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-38" value="&lt;b&gt;OR&lt;/b&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#FFB366;" vertex="1" parent="1">
          <mxGeometry x="145" y="350" width="60" height="20" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-40" value="" style="group" vertex="1" connectable="0" parent="1">
          <mxGeometry x="145" y="290" width="60" height="140" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-4" value="NGINX&lt;br&gt;Balancer" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#FFB366;" vertex="1" parent="bjESsrOZtTePqHt1_tni-40">
          <mxGeometry y="80" width="60" height="60" as="geometry" />
        </mxCell>
        <mxCell id="bjESsrOZtTePqHt1_tni-37" value="Custom&lt;br&gt;Golang&lt;br&gt;Balancer" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#FFB366;" vertex="1" parent="bjESsrOZtTePqHt1_tni-40">
          <mxGeometry width="60" height="60" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
